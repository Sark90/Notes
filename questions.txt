* В версии JDK 8 пакет java.lang.annotation был дополнен аннотациями @Repeatable и @Native.
Первая из них служит для поддержки повторяющихся аннотаций, как поясняется далее в этой главе, а вторая - для аннотирования полей,
доступных из платформенно-ориентированного кода.
 
* Аннотация @SafeVararqs.
Это - аннотация-маркер, применяемая в методах и конструкторах. Она указывает на отсутствие каких-нибудь небезопасных действий,
связанных с параметром переменной длины. Эта аннотация служит для подавления непроверяемых предупреждений, возникающих в коде,
который в остальном является безопасным, в связи с применением неовеществляемых типов аргументов переменной длины и получением
экземпляра параметризированного массива. ( Неовеществляемый тип - это, по существу, обобщенный тип, как поясняется в главе 14,
посвященной обобщениям.) Эту аннотацию следует применять только к методам или конструкторам с переменным количеством аргументов,
объявляемым как static или final .
- Обобщенные аргументы могут быть static?

* // Параметризированная аннотация, которую можно применить к типу данных
@Target(ElementType.TYPEUSE)
@interfaceMaxLen {
int va lue ( ) ;
}
- Параметризированная?

* // применить типовую аннотацию в конструкторе
public @Unique TypeAnnoDemo () {}

* // аннотировать объявление метода
public @Recommended Integer fЗ(String str) {
return str.length()/2;
}
- почему не перед public?

* // аннотировать уровни доступа к массиву
String @MaxLen(lO) [] @NotZeroLen [] w;
